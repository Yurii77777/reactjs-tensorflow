import { useRef, useEffect, useState } from "react";
import { Box, Alert, Button } from "@mui/material";

import useCamera from "../../hooks/useCamera";
import useLoadModels from "../../hooks/useLoadModels";
import useFaceDetection from "../../hooks/useFaceDetection";
import useFormatExpression from "../../hooks/useFormatExpression";

import { VIDEO_SIZES, CANVAS_SIZES, GENDER } from "../../constants/common";

import { controlsState } from "./controlsState";

import { AgeAndGenderState } from "../../models/ageAndGenderState";

import { styles } from "./styles";

const FaceDetection = () => {
  const [controls, setControls] = useState(controlsState);
  const [ageAndGenderMessage, setAgeAndGenderMessage] = useState<string | null>(null);

  const videoRef = useRef<HTMLVideoElement | null>(null);
  const canvasRef = useRef<HTMLCanvasElement | null>(null);

  // –ê–∫—Ç–∏–≤—É—î–º–æ –≤–µ–±-–∫–∞–º–µ—Ä—É, –ø–µ—Ä–µ–¥–∞—î–º–æ –≤—ñ–¥–µ–æ –ø–æ—Ç—ñ–∫ —ñ–∑ –≤–µ–±-–∫–∞–º–µ—Ä–∏ –≤ –µ–ª–µ–º–µ–Ω—Ç video
  // Activate the webcam, transfer the video stream from the webcam to the video element
  const { videoStream, error: errorCameraEnable } = useCamera({
    videoRef,
    width: VIDEO_SIZES.WIDTH,
    height: VIDEO_SIZES.HEIGHT,
  });

  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–æ–¥–µ–ª—ñ, —è–∫—â–æ –≤–µ–±-–∫–∞–º–µ—Ä–∞ —É—Å–ø—ñ—à–Ω—Ä –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞
  // Uploading models if the webcam is successfully activated
  const { isModelsPrepared, isErrorOnModelsLoading } = useLoadModels(videoStream);

  // –ê–∫—Ç–∏–≤—É—î–º–æ –¥–µ—Ç–µ–∫—Ü—ñ—é –æ–±–ª–∏—á—á—è
  // Activate face detection
  const { detectAllFaces, handleFaceLandmarks, handleFaceExpressions, handleAgeAndGender, expressions, genderAndAge } =
    useFaceDetection({
      videoStream,
      canvasRef,
      width: CANVAS_SIZES.WIDTH,
      height: CANVAS_SIZES.HEIGHT,
    });

  // –û–±—Ä–æ–±–ª—è—î–º–æ –≤–∏—Ä–∞–∑ –æ–±–ª–∏—á—á–∞, —è–∫—â–æ –æ–±—Ä–∞–Ω–∞ —Ç–∞–∫–∞ –æ–ø—Ü—ñ—è
  // Process facial expressions if this option is selected
  const { expressionMessage } = useFormatExpression(expressions);

  useEffect(() => {
    const activeControl = controls.find((control) => control.enabled);
    if (!activeControl) return;

    const handlerName = activeControl.handler;
    let interval: any;

    switch (handlerName) {
      case "detectAllFaces":
        interval = setInterval(detectAllFaces, 1000);
        break;
      case "handleFaceLandmarks":
        interval = setInterval(handleFaceLandmarks, 1000);
        break;
      case "handleFaceExpressions":
        interval = setInterval(handleFaceExpressions, 1000);
        break;
      case "handleAgeAndGender":
        interval = setInterval(handleAgeAndGender, 1000);
        break;
    }

    return () => clearInterval(interval);
  }, [controls, detectAllFaces, handleFaceLandmarks, handleFaceExpressions, handleAgeAndGender]);

  useEffect(() => {
    const handleAgeAndGenderMessage = () => {
      const { gender, age } = genderAndAge as AgeAndGenderState;

      let genderMessage = "";

      switch (gender) {
        case GENDER.male.eng:
          genderMessage = `–°—Ö–æ–∂–µ —Ç—É—Ç —É –Ω–∞—Å ${GENDER.male.ua}. `;
          break;
        case GENDER.female.eng:
          genderMessage = `–°—Ö–æ–∂–µ —Ç—É—Ç —É –Ω–∞—Å ${GENDER.female.ua}. `;
          break;
        default:
          console.log(`Who is this ${gender}?`);
      }

      if (age < 10) {
        genderMessage += `–û, —Å—Ü–∏–∫–æ–ø—ñ—Ö–æ—Ç–∞ –Ω–∞ –º—ñ—Å—Ü—ñ! –¢–æ–±—ñ ${age} —Ä–æ—á–∫—ñ–≤.`;
      } else if (age < 20) {
        genderMessage += `–©–µ —Ç—Ä—ñ—à–∫–∏ —ñ –±—É–¥—É—Ç—å –ø—ñ–≤—á–∏–∫ –ø—Ä–æ–¥–∞–≤–∞—Ç–∏. –¢–æ–±—ñ ${age} —Ä–æ—á–∫—ñ–≤.`;
      } else if (age < 30) {
        genderMessage += `–í—Ö–æ–¥–∏—à —É –¥–æ—Ä–æ—Å–ª–µ –∂–∏—Ç—Ç—è. –¢–æ–±—ñ ${age} —Ä–æ—á–∫—ñ–≤.`;
      } else if (age < 40) {
        genderMessage += `–í–∂–µ –ø–æ—Ä–∞ —Å—Ç–∞–≤–∞—Ç–∏ —Ä–æ–∑—Å—É–¥–ª–∏–≤–∏–º. –¢–æ–±—ñ ${age} —Ä–æ—á–∫—ñ–≤.`;
      } else if (age < 50) {
        genderMessage += `–Ø–∫ —Ç–∞–º, 45-—Ç—å –±–∞–±–∞ —è–≥—ñ–¥–∫–∞ –æ–ø—è—Ç—å. –¢–æ–±—ñ ${age} —Ä–æ—á–∫—ñ–≤.`;
      } else if (age < 60) {
        genderMessage += `–©–µ —î –ø–æ—Ä–æ—Ö —É –ø–æ—Ä–æ—Ö—ñ–≤–Ω–∏—Ü—è—Ö. –¢–æ–±—ñ ${age} —Ä–æ—á–∫—ñ–≤.`;
      } else if (age < 70) {
        genderMessage += `–í –ø—Ä–∏–Ω—Ü–∏–ø—ñ, –≤–∂–µ –º–æ–∂–Ω–∞ —ñ –º—ñ—Å—Ü–µ —Å–ø–æ—á–∏–≤–∞–Ω–Ω—è –ø—ñ–¥–±–∏—Ä–∞—Ç–∏. –¢–æ–±—ñ ${age} —Ä–æ—á–∫—ñ–≤.`;
      } else if (age > 70.01) {
        genderMessage += `–¶–µ –≤–∂–µ –∫–ª—ñ–Ω—ñ–∫–∞. –¢–æ–±—ñ ${age} —Ä–æ—á–∫—ñ–≤.`;
      }

      setAgeAndGenderMessage(genderMessage || "");
    };

    if (genderAndAge) {
      handleAgeAndGenderMessage();
    }
  }, [genderAndAge]);

  const handleControlClick = (itemId: number) => {
    setControls(controls.map((control) => ({ ...control, enabled: control.id === itemId })));
  };

  return (
    <Box sx={styles.wrapper}>
      <Box sx={styles.contentContainer}>
        <Box>
          {errorCameraEnable && (
            <Alert severity="error" sx={styles.alert}>
              {errorCameraEnable}
            </Alert>
          )}
          {isErrorOnModelsLoading && (
            <Alert severity="error" sx={styles.alert}>
              –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π! –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É! Model loading error! Try reloading the
              page!
            </Alert>
          )}

          {videoStream && !isErrorOnModelsLoading && !isModelsPrepared && (
            <Alert severity="info" sx={styles.alert}>
              –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∏! Program preparation is underway!
            </Alert>
          )}

          {isModelsPrepared && !expressionMessage && !ageAndGenderMessage && (
            <Alert severity="info" sx={styles.alert}>
              –ó–¥–∞—î—Ç—å—Å—è, —è —Ç–µ–±–µ –±–∞—á—É üòÖ I think I see you üòÖ
            </Alert>
          )}

          {expressionMessage && (
            <Alert severity="info" sx={styles.alert}>
              {expressionMessage}
            </Alert>
          )}

          {ageAndGenderMessage && (
            <Alert severity="info" sx={styles.alert}>
              {ageAndGenderMessage}
            </Alert>
          )}
        </Box>

        <Box sx={styles.videoContainer}>
          <Box sx={styles.controls}>
            {controls.map(({ id, title, enabled }) => (
              <Button
                key={id}
                variant={enabled ? "contained" : "outlined"}
                onClick={() => handleControlClick(id)}
                sx={styles.button}
              >
                {title}
              </Button>
            ))}
          </Box>
          <Box sx={{ position: "relative" }}>
            <video ref={videoRef} id="camera" autoPlay muted playsInline></video>
            <canvas ref={canvasRef} style={{ position: "absolute", top: 0, left: 0 }}></canvas>
          </Box>
        </Box>
      </Box>
    </Box>
  );
};

export default FaceDetection;
